Built an assembly code simulator in C++ to execute assembly programs
and simulate the registers, memory, and stack during time of execution. 
The code can be broadly divided into 2 parts - assembler and simulator.

1. Assembler converts each instruction to its corresponding machine code. Have provided support for all types of instructions - R, I, S, B, J and U.
2. The simulator simulates the assembly code.  
  i) Implemented the memory sections - the data and text. The text segment stores the machine code(generated by the assembler) while the data section stores data(global) variables.
  ii) Implemented stack, which helps in keeping track of function execution.
